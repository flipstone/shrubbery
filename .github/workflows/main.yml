name: Build and Test

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 5
      matrix:
        stack-yaml: ["stack-ghc-8.10.yaml",
                     "stack-ghc-9.0.yaml",
                     "stack-ghc-9.2.yaml",
                     "stack-ghc-9.4.yaml",
                     "stack-ghc-9.8.yaml",
                     "stack-ghc-9.10.yaml",
                     "stack.yaml"]
    permissions:
      packages: write
      contents: read
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        env:
          cache-version: v3
          stack-yaml-path: "${{ matrix.stack-yaml }}"
        with:
          key: ${{ env.cache-version }}-${{ env.stack-yaml-path }}-${{ hashFiles('shrubbery.cabal') }}
          restore-keys: |
            ${{ env.cache-version }}-
          path: |
            ./stack-root

      - name: Build and test
        run: |
          set -o errexit

          mkdir -p ./stack-root
          echo "PROJECT_DIR=$PWD" >> .env
          mv compose.override.github.yml compose.override.yml
          docker compose run \
            --rm \
            shrubbery \
            stack --stack-yaml ${{ matrix.stack-yaml }} test \
            --ghc-options=-j --flag shrubbery:ci
          docker compose run --rm shrubbery chmod -R +r /stack-root

  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache/restore@v4
        env:
          cache-version: v4
        with:
          key: ${{ env.cache-version }}-${{ hashFiles('stack*.yaml') }}-${{ hashFiles('shrubbery.cabal') }}
          restore-keys: |
            ${{ env.cache-version }}-
          path: |
            ./stack-root

      - name: Format and Check for Diff
        run: |
          set -o errexit

          mkdir -p ./stack-root
          echo "PROJECT_DIR=$PWD" >> .env
          cp compose.override.github.yml compose.override.yml
          docker compose run --rm shrubbery sh -c ./scripts/format-repo

  cabal-check:
    name: Cabal Check
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache/restore@v4
        env:
          cache-version: v3
        with:
          key: ${{ env.cache-version }}-${{ hashFiles('stack*.yaml') }}-${{ hashFiles('shrubbery.cabal') }}
          restore-keys: |
            ${{ env.cache-version }}-
          path: |
            ./stack-root

      - name: Check for Hackage releasable issues
        run: |
          set -o errexit

          echo "PROJECT_DIR=$PWD" >> .env
          cp compose.override.github.yml compose.override.yml
          docker compose run --rm shrubbery cabal check

  shellcheck:
    name: shellcheck
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache/restore@v4
        env:
          cache-version: v3
        with:
          key: ${{ env.cache-version }}-${{ hashFiles('stack*.yaml') }}-${{ hashFiles('shrubbery.cabal') }}
          restore-keys: |
            ${{ env.cache-version }}-
          path: |
            ./stack-root

      - name: Format and Check for Diff
        run: |
          set -o errexit

          echo "PROJECT_DIR=$PWD" >> .env
          cp compose.override.github.yml compose.override.yml
          sh -c scripts/shellcheck

  cabal-latest-build:
    name: Cabal Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache/restore@v4
        env:
          cache-version: format-v1
        with:
          key: ${{ env.cache-version }}-${{ hashFiles('stack*.yaml') }}-${{ hashFiles('shrubbery.cabal') }}
          restore-keys: |
            ${{ env.cache-version }}-
          path: |
            ./stack-root

      - name: Build with cabal and latest ghc+deps
        # When a new ghc version is released, we might not be able to build all the dependencies for
        # a little while. So we need to allow failure here. It is a very unfortunate situation that
        # github does not give us a better UX for this as the closest thing to a required check is
        # not configured here, but seemingly only through the api/webui for "branch protection"
        continue-on-error: true
        run: |
          set -o errexit

          echo "PROJECT_DIR=$PWD" >> .env
          cp compose.override.github.yml compose.override.yml
          sh -c scripts/cabal-latest
